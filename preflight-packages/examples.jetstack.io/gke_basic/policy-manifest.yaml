schema-version: "0.1.0"
id: "gke_basic"
namespace: "examples.jetstack.io"
package-version: "1.0.0"
data-gatherers:
- gke
# `root-query` selects selects the rego package: `data.<repo_package>`.
# In this case, it corresponds to the package in ./gke.rego.
root-query: "data.gke_basic"
name: Google Kubernetes Engine basic checks
description: >
  This package contains some basic recommendations for GKE clusters.
sections:
- id: "networking"
  name: Networking
  rules:
  - id: "private_cluster"
    name: Private cluster enabled
    description: >
      Enabling private cluster means Nodes do not have public IP addresses, and
      are therefore isolated from the public internet. They can then only
      communicate with the internet using configured gateways, such as Cloud
      NAT, thus limiting the possible exposure of workloads.
    remediation: >
      Changing this setting requires re-creation of the cluster. The private
      cluster option must be selected or specified when creating a GKE cluster.
    links:
    - "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
- id: "authentication"
  name: Authentication
  rules:
  - id: "basic_auth_disabled"
    name: Basic authentication disabled
    description: >
      Basic authentication allows a static plain-text username and password to
      authenticate to the Kubernetes API server. This is a legacy, insecure
      method of authentication that should not be used.
    remediation: >
      Ensure that the basic authentication option is never used. If basic
      authentication has been used, disable it and switch to another
      authentication method immediately.
    links:
    - "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#disable_basic_auth"
  - id: "abac_disabled"
    name: Legacy ABAC disabled
    description: >
      Attribute Based Access Control (ABAC) should be disabled as it has been
      superseded by Role Based Access Control (RBAC). RBAC offers more precise
      definition of roles and permissions and has significant security
      advantages.
    remediation: >
      ABAC is disabled by default on GKE, but can be enabled using the legacy
      ABAC option.
    links:
    - "https://kubernetes.io/docs/reference/access-authn-authz/abac/"
    - "https://kubernetes.io/docs/reference/access-authn-authz/authorization/"
    - "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#disable_abac"
- id: "maintenance"
  name: Maintenance
  rules:
  - id: "k8s_master_up_to_date"
    name: Kubernetes master version up to date
    description: >
      Kubernetes versions older than 1.13 no longer receive any patch updates
      and therefore are at risk as common vulnerabilities and exploits will not
      be fixed. Upgrade to at least Kubernetes 1.13.
    remediation: >
      On GKE the master components are periodically upgraded automatically, but
      itâ€™s possible to manually prompt an upgrade when a new stable version is
      available. If the master is not high availability, as is the case for
      zonal clusters, then upgrades will cause master downtime.
    links:
    - "https://cloud.google.com/kubernetes-engine/versioning-and-upgrades"
  - id: "k8s_nodes_up_to_date"
    name: Kubernetes node version up to date
    description: >
      Kubernetes versions older than 1.13 no longer receive any patch updates
      and therefore are at risk as common vulnerabilities and exploits will not
      be fixed. Upgrade to at least Kubernetes 1.13.
    remediation: >
      Nodes are also periodically upgraded by default. They cannot be newer than
      the master version and should not be more than 2 minor versions behind.
    links:
    - "https://cloud.google.com/kubernetes-engine/versioning-and-upgrades#automatic_node_upgrades"

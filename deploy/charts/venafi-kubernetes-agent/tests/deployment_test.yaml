suite: test deployment
templates:
  - deployment.yaml

tests:
  # Basic checks on deployment
  - it: templates as expected
    set:
      image.tag: latest
      config.clientId: "00000000-0000-0000-0000-000000000000"
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      # Validate name matches
      - matchRegex:
          path: metadata.name
          pattern: ^venafi-kubernetes-agent-*
      # Check is latest is set as tag that it uses that tag
      - equal:
          path: spec.template.spec.containers[0].image
          value: registry.venafi.cloud/venafi-agent/venafi-agent:latest

  # Check naming works with nameOverride
  - it: Deployment name is set when nameOverride is used
    set:
      nameOverride: example
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: ^example-RELEASE-NAME$

  # Check similar with fullnameOverride
  - it: Deployment name is set when fullnameOverride is used
    set:
      config.clientId: "00000000-0000-0000-0000-000000000000"
      fullnameOverride: example
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: example

  # Checking extraArgs are passed
  - it: Extra Args passed in a valid format when supplied
    set:
      config.clientId: "00000000-0000-0000-0000-000000000000"
      extraArgs: ["--strict", "--one-shot"]
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.containers[0].args
          content: --strict
      - contains:
          path: spec.template.spec.containers[0].args
          content: --one-shot

  # Check command is present when configured
  - it: Command passes to deployment manifest
    set:
      config.clientId: "00000000-0000-0000-0000-000000000000"
      command: ["notpreflight"]
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.containers[0].command
          content: notpreflight

  # Check the volumes and volumeMounts works correctly - FAILING
  - it: Volumes and VolumeMounts added correctly
    values:
      - ./values/custom-volumes.yaml
    asserts:
      - isKind:
          of: Deployment
      - equal:
          # In template this comes after credentials and agent config volumeMounts
          path: spec.template.spec.containers[0].volumeMounts[?(@.name == "cabundle")]
          value:
            name: cabundle
            mountPath: /etc/ssl/certs/ca-certificates.crt
            subPath: ca-certificates.crt
            readOnly: true
      - equal:
          path: spec.template.spec.volumes[?(@.name == "cabundle")].configMap
          value:
            name: cabundle
            optional: false
            defaultMode: 0644
            items:
              - key: cabundle
                path: ca-certificates.crt

  # Check proxy settings are additive not overriding and set to correct values.
  # Values from our documentation: https://docs.venafi.cloud/vaas/k8s-components/c-vcp-network-requirements/#modifying-network-settings-for-kubernetes
  - it: All environment variables present when all proxy settings are supplied
    set:
      http_proxy: "http://<proxy server>:<port>"
      https_proxy: "https://<proxy server>:<port>"
      no_proxy: "127.0.0.1,localhost,kubernetes.default.svc,kubernetes.default.svc.cluster.local"
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - lengthEqual :
          path: spec.template.spec.containers[0].env
          count: 7
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "NO_PROXY")].value
          value: "127.0.0.1,localhost,kubernetes.default.svc,kubernetes.default.svc.cluster.local"
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "HTTPS_PROXY")].value
          value: "https://<proxy server>:<port>"
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "HTTP_PROXY")].value
          value: "http://<proxy server>:<port>"

  # Check no proxy settings are set when no proxy settings are provided
  - it: Only default environment variables are set when no proxy settings are provided
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - lengthEqual :
          path: spec.template.spec.containers[0].env
          count: 4

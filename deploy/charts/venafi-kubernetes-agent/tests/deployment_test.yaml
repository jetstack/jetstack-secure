suite: test deployment
templates:
  - deployment.yaml

tests:
  # Basic checks on deployment
  - it: templates as expected
    set:
      image.tag: latest
      config.organisation: test_org
      config.cluster: test_cluster
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      # Validate name matches
      - matchRegex:
          path: metadata.name
          pattern: ^jetstack-agent-*
      # Check is latest is set as tag that it uses that tag
      - equal:
          path: spec.template.spec.containers[0].image
          value: quay.io/jetstack/preflight:latest

  # Check naming works with nameOverride
  - it: Deployment name is set when nameOverride is used
    set:
      config.organisation: test_org
      config.cluster: test_cluster
      nameOverride: example
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: ^example-RELEASE-NAME$
    # see example output as why this has to be like this. It's more subtle than 
    # the fullnameOverride:
      # Actual:
			# 	agent-RELEASE-NAME
			# Diff:
			# 	--- Expected
			# 	+++ Actual
			# 	@@ -1,2 +1,2 @@
			# 	-agent-*
			# 	+agent-RELEASE-NAME

  # Check similar with fullnameOverride
  - it: Deployment name is set when fullnameOverride is used
    set:
      config.organisation: test_org
      config.cluster: test_cluster
      fullnameOverride: example
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: example

  # Checking extraArgs are passed
  - it: Extra Args passed in a valid format when supplied
    set:
      config.organisation: test_org
      config.cluster: test_cluster
      extraArgs: ["--strict", "--one-shot"]
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.containers[0].args
          content: --strict
      - contains:
          path: spec.template.spec.containers[0].args
          content: --one-shot

  # Check command is present when configured
  - it: Command passes to deployment manifest
    set:
      config.organisation: test_org
      config.cluster: test_cluster
      command: ["notpreflight"]
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.containers[0].command
          content: notpreflight
